flask:
  build: ./flask
  ports:
    - "80:80"

vue:
  build: ./vue
  restart: on-failure
  ports:
    - "8080:8080"
  volumes:
    - './vue/node_modules:/app/node_modules'

angular:
  build:
    context: ./angular
  volumes:
    - '.:/app'
    - '/app/node_modules'
  ports:
    - '4201:4200'

react:
  build:
    context: ./react
  volumes:
    - '.:/app'
    - '/app/node_modules'
  ports:
    - '3000:3000'

mysql:
  image: mysql:5.7
  ports:
    - "3306:3306"
  environment:
    MYSQL_ROOT_PASSWORD: root
  volumes:
    - ./volumes/mysql:/docker-entrypoint-initdb.d/:ro

elasticsearch:
  image: docker.elastic.co/elasticsearch/elasticsearch:7.0.0
  environment:
    - discovery.type=single-node
  ports:
    - "9200:9200"

nginx:
  image: nginx:1.15-alpine
  ports:
    - "81:80"
  volumes:
    #- ./volumes/nginx/conf:/etc/nginx/conf.d
    - ./volumes/nginx/src:/usr/share/nginx/html

kibana:
  image: docker.elastic.co/kibana/kibana:7.0.0
  ports:
    - "5601:5601"

kafka:
  environment:
    KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  image: wurstmeister/kafka
  ports:
    - "32770:9092"
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock

zookeeper:
  image: wurstmeister/zookeeper
  ports:
    - "2182:2181"

rubyonrails:
  build: ./rubyonrails
  ports:
    - "80:3000"
  volumes:
    - "./rubyonrails:/app"